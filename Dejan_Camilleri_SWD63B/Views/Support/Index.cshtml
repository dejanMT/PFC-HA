@model Dejan_Camilleri_SWD63B.Models.TicketPost
@{
    ViewData["Title"] = "Report an Issue";
}

<style>
    #uploadProgress {
        transition: width 0.5s ease;
    }
</style>

<div class="container mt-5">
    <h2 class="mb-4">@ViewData["Title"]</h2>

    <form id="ticketForm"
          asp-action="OpenTicket"
          asp-controller="Support"
          method="post"
          enctype="multipart/form-data">
      @Html.AntiForgeryToken()

      <div class="mb-3">
        <label asp-for="PostTitle" class="form-label">Title</label>
        <input asp-for="PostTitle" class="form-control" />
        <span asp-validation-for="PostTitle" class="text-danger"></span>
      </div>

      <div class="mb-3">
        <label asp-for="PostDescription" class="form-label">Description</label>
        <textarea asp-for="PostDescription"
                  class="form-control"
                  rows="4"></textarea>
        <span asp-validation-for="PostDescription" class="text-danger"></span>
      </div>

        <div class="mb-3">
            <label asp-for="Priority" class="form-label">Priority</label>
            <select asp-for="Priority" class="form-select" required>
                <option value="" disabled selected>-- Select priority --</option>
                <option value="High">High</option>
                <option value="Medium">Medium</option>
                <option value="Low">Low</option>
            </select>
            <span asp-validation-for="Priority" class="text-danger"></span>
        </div>

      <!-- **File input must match your model’s property name exactly** -->
        <div class="mb-3">
            <label for="files">Select images</label>
            <input type="file" id="files" multiple class="form-control" accept="image/*" />
        </div>

        <div class="mb-3">
            <div id="uploadList"></div>
        </div>

        <div id="hiddenUrls"></div>

      <button type="submit" class="btn btn-primary">Open Ticket</button>
    </form>

</div>


@section Scripts {

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .progress-bar {
            transition: width 0.3s ease;
        }
    </style>
    <script>
        $(function(){
          let files, uploadedCount = 0;

          $('#files').on('change', function(){
            files = this.files;
            uploadedCount = 0;
            $('#uploadList').empty();
            $('#hiddenUrls').empty();
            $('#submitBtn').prop('disabled', true);

            // build UI placeholders
            $.each(files, function(i, file){
              $('#uploadList').append(`
                <div class="mb-2">
                  <strong>${file.name}</strong>
                  <div class="progress">
                    <div class="progress-bar" role="progressbar"
                         style="width:0%" aria-valuemin="0" aria-valuemax="100">0%</div>
                  </div>
                </div>`);
            });

            // start uploading the first file
            uploadOne(0);
          });

          function uploadOne(index){
            if (index >= files.length){
              // all done → enable final submit
              $('#submitBtn').prop('disabled', false);
              return;
            }
            const file = files[index];
            const progressBar = $('#uploadList .progress-bar').eq(index);
            const fd = new FormData();
            fd.append('file', file);

            $.ajax({
              url: '/Support/UploadImage',
              type: 'POST',
              data: fd,
              processData: false,
              contentType: false,
              xhr: function(){
                const xhr = new XMLHttpRequest();
                xhr.upload.addEventListener('progress', function(evt){
                  if (evt.lengthComputable){
                    const pct = Math.round(evt.loaded/evt.total*100);
                    progressBar.css('width', pct + '%').text(pct + '%');
                  }
                });
                return xhr;
              },
              success: function(res){
                // mark 100%
                progressBar.css('width','100%').text('100%');
                // inject a hidden input per URL
                $('#hiddenUrls').append(
                  `<input type="hidden" name="TicketImageUrls" value="${res.imageUrl}" />`
                );
                // next file
                uploadOne(index + 1);
              },
              error: function(){
                alert('Upload failed: ' + file.name);
                uploadOne(index + 1);
              }
            });
          }
        });
    </script>





}

